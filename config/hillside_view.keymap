/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&caps_word {
};

/ {
    macros {
        bs_word: bs_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "BS_WORD";
        };

        left_word: left_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "LEFT_WORD";
        };

        right_word: right_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "RIGHT_WORD";
        };
    };

    behaviors {
        alt_code: alt_code {
            compatible = "zmk,behavior-caps-word";
            label = "ALT_CODE";
            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            continue-list = <KP_NUMBER_1 KP_NUMBER_2 KP_NUMBER_3 KP_NUMBER_4 KP_NUMBER_5 KP_NUMBER_6 KP_NUMBER_7 KP_NUMBER_8 KP_NUMBER_9 KP_NUMBER_0 NUMBER_1 NUMBER_2 NUMBER_3 NUMBER_4 NUMBER_7 NUMBER_5 NUMBER_6 NUMBER_8 NUMBER_9 NUMBER_0 KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_N0>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <150>;
        };

        shift_word: shift_word {
            compatible = "zmk,behavior-caps-word";
            label = "SHIFT_WORD";
            #binding-cells = <0>;
            continue-list = <KP_NUMBER_1 KP_NUMBER_2 KP_NUMBER_3 KP_NUMBER_4 KP_NUMBER_5 KP_NUMBER_6 KP_NUMBER_7 KP_NUMBER_8 KP_NUMBER_9 KP_NUMBER_0 BACKSPACE UNDERSCORE>;
            mods = <(MOD_LSFT)>;
        };

        lt_layer: lt_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_LAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
        };

        td_mo1_mo3: td_mo1_mo3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO1_MO3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 3>;
        };

        td_mo2_mo3: td_mo2_mo3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO2_MO3";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
  &kp Q        &kp W            &kp E              &kp R             &kp T      &kp Y            &kp U         &kp I                   &kp O                  &kp P
  &kp A        &kp S            &kp D              &kp F             &kp G      &kp H            &kp J         &kp K                   &kp L                  &kp SEMI
  &kp Z        &hrm LEFT_ALT X  &hrm LEFT_SHIFT C  &hrm LCTRL V      &kp B      &kp N            &hrm RCTRL M  &hrm RIGHT_SHIFT COMMA  &hrm RIGHT_ALT PERIOD  &kp FSLH
  &shift_word  &kp LCTRL        &td_mo1_mo3        &kp SINGLE_QUOTE  &kp TAB    &kp RIGHT_SHIFT  &td_mo2_mo3   &kp SPACE               &kp ENTER              &kp ESC
            >;
        };

        numbers {
            bindings = <
  &kp EXCL         &kp AT           &kp HASH         &kp DLLR         &kp PRCNT          &kp CARET        &kp AMPS         &kp ASTRK        &kp LPAR         &kp RPAR
  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5    &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
  &trans           &trans           &trans           &trans           &kp BACKSLASH      &kp MINUS        &kp UNDER        &trans           &trans           &trans
  &trans           &trans           &trans           &trans           &trans             &trans           &mo 4            &trans           &trans           &trans
            >;
        };

        function_bracket {
            bindings = <
  &kp F1  &kp F2   &kp F3   &kp F4   &trans            &trans     &kp KP_NUMLOCK         &kp INSERT         &kp PAUSE_BREAK  &kp PRINTSCREEN
  &kp F5  &kp F6   &kp F7   &kp F8   &kp UNDERSCORE    &kp MINUS  &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp SEMI
  &kp F9  &kp F10  &kp F11  &kp F12  &trans            &trans     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp EQUAL
  &trans  &trans   &mo 4    &trans   &trans            &trans     &trans                 &trans             &trans           &trans
            >;
        };

        wasd_mouse {
            bindings = <
  &trans  &trans          &kp UP_ARROW  &trans     &trans       &trans     &trans          &kp UP_ARROW  &trans     &trans
  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans       &trans     &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans
  &trans  &trans          &trans        &trans     &trans       &trans     &trans          &trans        &trans     &trans
  &trans  &trans          &mkp RCLK     &mkp LCLK  &mkp MCLK    &mkp MCLK  &mkp LCLK       &mkp RCLK     &trans     &trans
            >;
        };

        bt_nav {
            bindings = <
  &trans  &trans     &trans    &trans  &trans       &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
  &trans  &kp LSHFT  &kp DOWN  &kp UP  &kp RIGHT    &kp LEFT        &kp DOWN      &kp UP        &kp RIGHT     &trans
  &trans  &trans     &trans    &trans  &trans       &kp HOME        &kp PG_DN     &kp PG_UP     &kp END       &trans
  &trans  &kp LALT   &kp LGUI  &trans  &trans       &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &trans
            >;
        };
    };
};
